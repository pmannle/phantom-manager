#!/usr/bin/env ruby

require 'optparse'

$options = {}

optparse = OptionParser.new do |opts|

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end

  opts.on( '-c', '--config FILE', "Configuration file path" ) do |f|
    $options[:config] = f
  end

  opts.on( '-e', '--env ENVIRONMENT', "Environment to run on" ) do |env|
    $options[:env] = env
  end
  
end

optparse.parse!

mandatory = [:env, :config]
missing = mandatory.select{ |param| $options[param].nil? }

if not missing.empty?
  puts "Missing options: #{missing.join(', ')}"
  puts optparse
  exit
end

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'phantom/manager/version'
require 'monitors/memory.rb'
require 'monitors/processes.rb'
require 'monitors/restart_listener.rb'


$logger.info "Starting for environment #{$options[:env]} with config file #{$options[:config]}... "

Monitors::RestartListener.run

$logger.info "Running memory monitor for phantom processes"

Thread.new {Monitors::Memory.run}

$logger.info "Running processes monitor for phantom processes"

Thread.new {Monitors::Processes.run}.join

